Since it is sorted. we can just change the pointers to point to next node.
One interesting thing I obersved is how if we dont check for temp!=null improved my efficiency from 22% to 100%.


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode temp = head;
        if(head ==null)
            return null;
        
        while(temp!=null && temp.next!=null)
        {
        if(temp.val == temp.next.val)
            temp.next = temp.next.next;
        else
            temp = temp.next;
        }
        
        return head;
    }
}
