Start off by creating a new ListNode.
Point it to which ever ListNode is small or equal..
If either of the ListNodes reach null, point it to the other Node.






/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        
        ListNode dummyHead = new ListNode(0);
        ListNode current = dummyHead;
        
        while(l1!=null && l2!=null) // This shoud be the loop condition not current.next==null
        {

        if(l1.val<=l2.val)
        {
            current.next = l1;
            l1 = l1.next;
            
        }
        else{
        current.next = l2;
            l2 = l2.next;
        
        }
        current = current.next; // current.next should be changed each time
        }
       current.next =  l1 ==null ? l2 : l1;
       // l2 = l2.next ==null ? l1 : l2.next;
        return dummyHead.next;
        
        
    }
}
