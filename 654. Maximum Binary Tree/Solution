I struggled with writing a recursive function for returning result treenode.
Result treeNode's left is maximum until the maximum index.
Result treenode's right is maximum after the maximum index.
Initially root of the result is maximum in the entire array.



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        
        if(nums.length ==0)
            return null;
     return getMaximum(nums, 0, nums.length-1);
       
        
      //return getMaximum();  
        
    }
    
    
    public TreeNode getMaximum(int [] nums, int start, int end)
    {
        
        if(start>end)
            return null;
        
        int min =start;
       for(int i = start+1; i<=end;i++)
        {
            if(nums[i]>nums[min])
                min = i;
           //start++;
            
        }
         TreeNode result = new TreeNode(nums[min]);
         result.left = getMaximum(nums, start,min-1);
        result.right =getMaximum(nums, min+1, end);
        return result; 
        
    }
}
