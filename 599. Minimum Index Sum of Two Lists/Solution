Since there was no memory constraint, I created two dictionaries and 2 lists.
Surprisingly, my solution is faster than 100% of Python submissions.

1. Store the items from either of the list in a dictionary.
2. Iterate through the second list and if there is a match, append the index to a list 
3. Find the minimum of that list
4. Retreive the elements with that value


class Solution:
    def findRestaurant(self, list1: 'List[str]', list2: 'List[str]') -> 'List[str]':
        result  ={}
        for i in range(len(list1)):
            result[list1[i]] =i
        result2 = {}
        l = []
        ll =[]
        for i in range(len(list2)):
            if list2[i] in result:
                result2[list2[i]] =  result[list2[i]] + i
                ll.append(result[list2[i]] + i)
      
        m = min(ll)
        l+=[s for s, v in result2.items() if v==m]
       
        return l
    
