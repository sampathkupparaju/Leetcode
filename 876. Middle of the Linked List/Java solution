The idea is to first calculate the size of the linkedlist.
Once we have the length of the linkedlist, until we reach the middle of the linkedlist loop through it
Then return head










/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
  int count =1;
	 ListNode required = head;
        
	  
	  while(required.next!=null)
	  {
		  
		  count++;
		  required =required.next;
		  
	  }
       
	   System.out.println(count);
	   for (int i =0;i<count;i++)
	   {
		   if (i==count/2){
        
		   break;
           }
       
		  head = head.next;
	   }
	   return head;
	   
    }
}
