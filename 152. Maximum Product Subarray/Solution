Same as Kadane's Algorithm
Except for we find the mimum value too just because the product of two negatives gives a positive.



class Solution:
    def maxProduct(self, nums: 'List[int]') -> 'int':
        curr = nums[0]
        result = nums[0]
        currmin = nums[0]
        for i in range(1, len(nums)):
            currmin, curr= min(nums[i], nums[i]*currmin, nums[i]*curr),  max(nums[i], nums[i]*curr, currmin*nums[i])
            
            if result < curr:
                result = curr
            
            
        return result
